{"key":"tuning","pages":[{"script":"const { XmlResource } = require(\"@s4tk/models\");\n\n// ==================================================\n// Creating Tuning\n\n// TODO:\n\n// ==================================================\n// Accessing the DOM\n\n// TODO:\n\n// ==================================================\n// Editing the DOM\n\n// TODO:\n","guide":"<h2>XmlResource</h2>\n<p>\n  When dealing with XML tuning resources, you'll need to use the\n  <code>XmlResource</code> class from @s4tk/models.\n</p>\n<p>\n  This tutorial will teach you about the <code>XmlResource</code> model itself,\n  NOT how to use XML DOMs. It is highly recommended that you check out the\n  <a href=\"#/tutorials/xml-dom\">XML DOMs tutorial</a> before this one.\n</p>\n\n<h4>Creating Tuning</h4>\n<p>TODO</p>\n\n<h4>Accessing The DOM</h4>\n<p>TODO</p>\n\n<h4>Editing The DOM</h4>\n<p>TODO</p>\n"},{"script":"// TODO:\n","guide":"<h2>Reading and Writing XML</h2>\n<p>\n  An important aspect of <code>XmlResource</code>s is reading from and writing\n  to XML files.\n</p>\n\n<h4>Reading XML</h4>\n<p>\n  Like any other resource, you can load existing data into an\n  <code>XmlResource</code> model with its static\n  <code>from(buffer: Buffer)</code> method. It accepts a buffer containing plain\n  text XML data, and will load that data into its DOM.\n</p>\n<p>\n  The <code>XmlResource.from()</code> method also accepts some optional\n  arguments, but you usually do not have to worry about these. You can check out\n  the documentation linked above for more information if you wish.\n</p>\n"}],"media":{}}