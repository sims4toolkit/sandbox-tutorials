{"key":"intro-to-s4tk","pages":[{"script":"","guide":"<h2>S4TK Models</h2>\n<p>\n  You're going to learn about several S4TK models, but it may help you to know\n  about some common patterns that appear throughout the entire library.\n</p>\n\n<h4>Writable Models</h4>\n<p>\n  While this isn't something you'd normally have to know about, all of the\n  models in S4TK inherit from a common base class called\n  <code>WritableModel</code>. This is just worth mentioning because it helps you\n  understand what the models have in common with each other.\n</p>\n<p>\n  One of the most important commonality between writiable models is their static\n  <code>from()</code> method. Every class that inherits from\n  <code>WritableModel</code> implements a static\n  <code>from(buffer: Buffer)</code> method that accepts a single buffer as an\n  argument, and may accept optional arguments in an object as a second argument.\n</p>\n<p>\n  You're going to see this <code>from()</code> method used in every model\n  tutorial, so it's good to be aware of.\n</p>\n\n<h4>Mapped Models</h4>\n<p>\n  <code>MappedModel</code> is another anbstract base class that you generally\n  don't need to worry about, but again, it's worth mentioning so you have\n  context for the models that inherit from it.\n</p>\n<p>\n  A <code>MappedModel</code> inherits from <code>WritableModel</code>, so\n  everything said in the last section also applies here.\n</p>\n<p>\n  At time of writing, there are two mapped models: <code>Package</code> and\n  <code>StringTableResource</code>. What mapped models have in common is that\n  they map keys to values. In the case of packages, they map resource keys\n  (type, group, instance) to resources, and in the case of string tables, they\n  map 32-bit integers to strings.\n</p>\n<p>\n  The vast majority of methods that are used to interact with mapped models\n  appear on the <code>MappedModels</code> base class, so be sure to review that\n  documention when working with packages and string tables.\n</p>\n<p>\n  This also means that once you've mastered working with one of them, you've\n  mastered working with both, since they're essentially the same thing just with\n  different types for their keys and values.\n</p>\n"}],"media":{}}